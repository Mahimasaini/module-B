var V = 5;
var parent = Array(V).fill(0);
var INF = 1000000000;

function findSet(i)
{
	while (parent[i] != i)
		i = parent[i];
	return i;
}

function unionOfTwoSets(i, j)
{
	var a = findSet(i);
	var b = findSet(j);
	parent[a] = b;
}

function KruskalMinimumSpanningTree(weight)
{
	var minWeight = 0; 

	for (var i = 0; i < V; i++)
		parent[i] = i;

	var edgeCount = 0;
	while (edgeCount < V - 1)
	{
		var min = INF, a = -1, b = -1;
		for (var i = 0; i < V; i++)
		{
			for (var j = 0; j < V; j++)
			{
				if (findSet(i) != findSet(j) && weight[i][j] < min)
				{
					min = weight[i][j];
					a = i;
					b = j;
				}
			}
		}

		unionOfTwoSets(a, b);
		edgeCount++
 console.log("Starting vertex ,Ending vertex and weight of Edge :",a,b,min)
		minWeight += min;
	}
console.log("Total weight of minimum spanning tree :-",minWeight)
}

var weight = [
	[INF, 2, INF, 6, INF],
	[2, INF, 3, 8, 5],
	[INF, 3, INF, INF, 7],
	[6, 8, INF, INF, 9],
	[INF, 5, 7, 9, INF]];
KruskalMinimumSpanningTree(weight);



