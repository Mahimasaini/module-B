
class AttachedNodes:
	def __init__(self, data):
		self.vertex = data
		self.next = None


class Graph:
	def __init__(self, vertices):
		self.Vertices = vertices
		self.graph = [None] * self.Vertices

	def addEdgeToGraph(self, startingVertex, endingVertex):
		node = AttachedNodes(endingVertex)
		node.next = self.graph[startingVertex]
		self.graph[startingVertex] = node

		node = AttachedNodes(startingVertex)
		node.next = self.graph[endingVertex]
		self.graph[endingVertex] = node

	def showGraph(self):
		for i in range(self.Vertices):
			print("Attached Vertices to vertex {} is : ".format(i), end="")
			temp = self.graph[i]
			while temp:
				print(" -> {}".format(temp.vertex), end="")
				temp = temp.next
			print(" \n")


if __name__ == "__main__":
	Vertices = 5
	graph = Graph(Vertices)
	graph.addEdgeToGraph(0, 1)
	graph.addEdgeToGraph(0, 4)
	graph.addEdgeToGraph(1, 2)
	graph.addEdgeToGraph(1, 3)
	graph.addEdgeToGraph(1, 4)
	graph.addEdgeToGraph(2, 3)
	graph.addEdgeToGraph(3, 4)

	graph.showGraph()

